# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]
env:
  TEJAPI_KEY: ${{ secrets.TQUANTLABTESTKEY }}

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install TejToolAPI
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------     
      - name: Run test
        env:
          TEJAPI_KEY: ${{ secrets.TQUANTLABTESTKEY }}
          TEJAPI_BASE: 'https://api.tej.com.tw'
          
        run: pytest test/test_module.py

#   deploy:
#     runs-on: ubuntu-latest
#     needs: test
#     if: ${{ job.status == 'success' }}  
#     steps:
#       - uses: actions/checkout@v3
#       - name: Set up Python
#         uses: actions/setup-python@v3
#         with:
#           python-version: '3.x'
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install build
#       - name: Build package
#         run: python -m build
#       - name: Publish package
#         uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
#         with:
#           user: __token__
#           password: ${{ secrets.PYPI_API_TOKEN }}
#       - name: Publish test package
#         uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
#         with: 
#           user: __token__
#           password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#           repository_url: https://test.pypi.org/legacy/

  # deploy:

  #   runs-on: [ ubuntu-latest ]
  #   needs: test
  #   if: ${{ job.status == 'success' }}  

  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: '3.x'
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install build

  #   - name: Build package
  #     run: python -m build

  #   - name: Publish package
  #     uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
  #     with:
  #       user: __token__
  #       password: ${{ secrets.PYPI_API_TOKEN }}
  #   - name: Publish test package
  #     uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
  #     with: 
  #       user: __token__
  #       password: ${{ secrets.TEST_PYPI_API_TOKEN }}
  #       repository_url: https://test.pypi.org/legacy/
